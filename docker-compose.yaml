version: "3"

services:
  backend_users:
    container_name: backend_users
    networks:
      - backs
    build: ./users
    command: sh -c "python3 ./users/manage.py migrate &&
      python3 ./users/manage.py runserver 0.0.0.0:9000"
    ports:
        - "9000:9000"
    volumes:
        - .:/app
    restart: always

  backend_properties:
    container_name: backend_properties
    networks:
      - backs
    build: ./properties
    command: sh -c "python3 ./properties/manage.py migrate &&
      python3 ./properties/manage.py runserver 0.0.0.0:8000"
    ports:
        - "8000:8000"
    volumes:
        - .:/app
    restart: always

  zookeeper-ms:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - backs
    container_name: zookeeper-ms
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    networks:
      - backs
    container_name: kafka-broker-1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper-ms
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-ms:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-broker-1:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

networks:
  backs:
    driver: bridge
